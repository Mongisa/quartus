// Copyright (C) 2022  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 22.1std.0 Build 915 10/25/2022 SC Lite Edition"

// DATE "04/05/2024 10:13:56"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module lut1 (
	A,
	Y);
input 	[4:0] A;
output 	Y;

// Design Ports Information
// Y	=>  Location: PIN_N1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[0]	=>  Location: PIN_K1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[1]	=>  Location: PIN_L2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[2]	=>  Location: PIN_L3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[3]	=>  Location: PIN_K2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A[4]	=>  Location: PIN_L1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Y~output_o ;
wire \A[4]~input_o ;
wire \A[2]~input_o ;
wire \A[1]~input_o ;
wire \A[3]~input_o ;
wire \A[0]~input_o ;
wire \WideOr0~0_combout ;
wire \WideOr0~1_combout ;
wire \WideOr0~2_combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y7_N2
cycloneive_io_obuf \Y~output (
	.i(\WideOr0~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y~output_o ),
	.obar());
// synopsys translate_off
defparam \Y~output .bus_hold = "false";
defparam \Y~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \A[4]~input (
	.i(A[4]),
	.ibar(gnd),
	.o(\A[4]~input_o ));
// synopsys translate_off
defparam \A[4]~input .bus_hold = "false";
defparam \A[4]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y10_N22
cycloneive_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N1
cycloneive_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y12_N1
cycloneive_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y12_N8
cycloneive_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N24
cycloneive_lcell_comb \WideOr0~0 (
// Equation(s):
// \WideOr0~0_combout  = (\A[1]~input_o  & ((\A[2]~input_o  & ((!\A[0]~input_o ) # (!\A[3]~input_o ))) # (!\A[2]~input_o  & (\A[3]~input_o  $ (!\A[0]~input_o ))))) # (!\A[1]~input_o  & (((\A[3]~input_o ) # (\A[0]~input_o ))))

	.dataa(\A[2]~input_o ),
	.datab(\A[1]~input_o ),
	.datac(\A[3]~input_o ),
	.datad(\A[0]~input_o ),
	.cin(gnd),
	.combout(\WideOr0~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr0~0 .lut_mask = 16'h7BBC;
defparam \WideOr0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N10
cycloneive_lcell_comb \WideOr0~1 (
// Equation(s):
// \WideOr0~1_combout  = (\A[2]~input_o  & (!\A[0]~input_o  & ((\A[1]~input_o ) # (!\A[3]~input_o )))) # (!\A[2]~input_o  & ((\A[1]~input_o ) # (\A[3]~input_o  $ (\A[0]~input_o ))))

	.dataa(\A[2]~input_o ),
	.datab(\A[1]~input_o ),
	.datac(\A[3]~input_o ),
	.datad(\A[0]~input_o ),
	.cin(gnd),
	.combout(\WideOr0~1_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr0~1 .lut_mask = 16'h45DE;
defparam \WideOr0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N20
cycloneive_lcell_comb \WideOr0~2 (
// Equation(s):
// \WideOr0~2_combout  = (\A[4]~input_o  & (\WideOr0~0_combout )) # (!\A[4]~input_o  & ((\WideOr0~1_combout )))

	.dataa(\A[4]~input_o ),
	.datab(\WideOr0~0_combout ),
	.datac(gnd),
	.datad(\WideOr0~1_combout ),
	.cin(gnd),
	.combout(\WideOr0~2_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr0~2 .lut_mask = 16'hDD88;
defparam \WideOr0~2 .sum_lutc_input = "datac";
// synopsys translate_on

assign Y = \Y~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_C1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_D2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_H1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_H2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_F16,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
